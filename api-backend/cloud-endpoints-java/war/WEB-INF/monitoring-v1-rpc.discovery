{
 "kind": "discovery#rpcDescription",
 "etag": "\"381e4s_8vUCNPclzPT4yxtto0eA/4O8PHMIpuoqMaVqgcIBrrDXRnkg\"",
 "discoveryVersion": "v1",
 "id": "monitoring:v1",
 "name": "monitoring",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://cloud-endpoints-example.appspot.com/_ah/api/",
 "rpcUrl": "https://cloud-endpoints-example.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "Chronology": {
   "id": "Chronology",
   "type": "object",
   "properties": {
    "zone": {
     "$ref": "DateTimeZone"
    }
   }
  },
  "DateTimeZone": {
   "id": "DateTimeZone",
   "type": "object",
   "properties": {
    "fixed": {
     "type": "boolean"
    },
    "id": {
     "type": "string"
    }
   }
  },
  "Instant": {
   "id": "Instant",
   "type": "object",
   "properties": {
    "afterNow": {
     "type": "boolean"
    },
    "beforeNow": {
     "type": "boolean"
    },
    "chronology": {
     "$ref": "Chronology"
    },
    "equalNow": {
     "type": "boolean"
    },
    "millis": {
     "type": "string",
     "format": "int64"
    },
    "zone": {
     "$ref": "DateTimeZone"
    }
   }
  },
  "Key": {
   "id": "Key",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "complete": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "kind": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "namespace": {
     "type": "string"
    },
    "parent": {
     "$ref": "Key"
    }
   }
  },
  "Room": {
   "id": "Room",
   "type": "object",
   "properties": {
    "key": {
     "$ref": "Key"
    },
    "lastActive": {
     "$ref": "Instant"
    },
    "name": {
     "type": "string"
    },
    "sensors": {
     "type": "array",
     "items": {
      "$ref": "Sensor"
     }
    }
   }
  },
  "RoomCollection": {
   "id": "RoomCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Room"
     }
    }
   }
  },
  "Sensor": {
   "id": "Sensor",
   "type": "object",
   "properties": {
    "active": {
     "type": "boolean"
    },
    "key": {
     "$ref": "Key"
    },
    "lastActive": {
     "$ref": "Instant"
    },
    "lastActiveUtc": {
     "type": "string"
    },
    "networkId": {
     "type": "string"
    },
    "sensorType": {
     "$ref": "SensorType"
    }
   }
  },
  "SensorType": {
   "id": "SensorType",
   "type": "string",
   "enum": [
    "MOTION",
    "TEMPERATURE"
   ],
   "enumDescriptions": [
    "",
    ""
   ]
  }
 },
 "methods": {
  "monitoring.addRoom": {
   "id": "monitoring.addRoom",
   "parameters": {
    "resource": {
     "$ref": "Room"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Room"
   }
  },
  "monitoring.addSensor": {
   "id": "monitoring.addSensor",
   "parameters": {
    "resource": {
     "$ref": "Sensor"
    },
    "room": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "resource",
    "room"
   ],
   "returns": {
    "$ref": "Room"
   }
  },
  "monitoring.arm": {
   "id": "monitoring.arm",
   "allowGet": true
  },
  "monitoring.deleteRoom": {
   "id": "monitoring.deleteRoom",
   "parameters": {
    "room": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "room"
   ]
  },
  "monitoring.disarm": {
   "id": "monitoring.disarm",
   "allowGet": true
  },
  "monitoring.listRooms": {
   "id": "monitoring.listRooms",
   "allowGet": true,
   "returns": {
    "$ref": "RoomCollection"
   }
  },
  "monitoring.logSensorUpdate": {
   "id": "monitoring.logSensorUpdate",
   "allowGet": true,
   "parameters": {
    "network_id": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "network_id"
   ]
  },
  "monitoring.updateRoom": {
   "id": "monitoring.updateRoom",
   "parameters": {
    "resource": {
     "$ref": "Room"
    },
    "room": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "resource",
    "room"
   ],
   "returns": {
    "$ref": "Room"
   }
  }
 }
}
